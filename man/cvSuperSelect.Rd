% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select.R
\name{cvSuperSelect}
\alias{cvSuperSelect}
\title{Short description}
\usage{
cvSuperSelect(
  y_all,
  x_all,
  family,
  cvSLfeatsel_control,
  verbose = FALSE,
  fold_num = NULL
)
}
\arguments{
\item{y_all}{Outcome vector}

\item{x_all}{Covariate/Feature \code{data.frame}}

\item{family}{Describes the error distribution}

\item{cvSLfeatsel_control}{List of SL.library, method, selector.library, and nFolds}

\item{verbose}{Print diagnostic messages? Defaults to FALSE}

\item{fold_num}{Optional fold number if this function is being executed within a CV fold.}
}
\value{
A named list containing the results of the \code{\link[SuperLearner]{CV.SuperLearner}}
feature selection. Will contain elements \code{whichVariable} (a \code{data.frame}),
\code{summary} (a \code{data.frame}), and cvslFull (a \code{list} containing one result of class
\code{CV.SuperLearner} for each \code{method} supplied).
}
\description{
Long description
}
\examples{
\dontrun{
# remotes::install_github('osofr/simcausal', build_vignettes = FALSE)
library(simcausal)
n <- 200
D <- DAG.empty() +
    node("W1", distr="rnorm", mean = 1, sd = 1) + # was random noise
    node("W2", distr="rlnorm", meanlog = 3.56, sdlog = 0.44) + # was age
    node("W3", distr="rlnorm", meanlog = 0.08 * log(W2) + 3.01, sdlog = 0.21) + # was BMI
    node("Y", distr="rbern", prob = plogis(-2.35 - 0.013 * W3 + 0.015 * W2))
D <- set.DAG(D)
dat <- simobs(D, n=n, rndseed = 620)
res <- cvSuperSelect(dat$Y, dat[,c("W1", "W2", "W3")], binomial(),
                     list(SL.library = setNames(list(c("SL.mean", "screen.randomForest.imp"),
                                                     c("SL.mean", "screen.earth.backwardprune")),
                                                c("random forest biggest diff mean",
                                                  "splines biggest diff mean")),
                          method = "method.NNloglik",
                          selector.library = data.frame(selector = c("cutoff.biggest.diff",
                                                                     "cutoff.k"),
                                                        k = c(NA, 2),
                                                        rowname = c("biggest diff", "top2"),
                                                        stringsAsFactors = FALSE) \%>\%
                                             tibble::column_to_rownames(),
                          nFolds = 3),
                     verbose = TRUE)

# based on example in SuperLearner package
set.seed(1)
n <- 100
p <- 20
X <- matrix(rnorm(n*p), nrow = n, ncol = p)
X <- data.frame(X)
Y <- X[, 1] + sqrt(abs(X[, 2] * X[, 3])) + X[, 2] - X[, 3] + rnorm(n)
res <- cvSuperSelect(Y, X, gaussian(),
                     list(SL.library = setNames(list(c("SL.mean", "screen.randomForest.imp"),
                                                     c("SL.mean", "screen.earth.backwardprune")),
                                                c("random forest biggest diff mean",
                                                  "splines biggest diff mean")),
                          method = "method.NNLS",
                          selector.library = data.frame(selector = c("cutoff.biggest.diff",
                                                                     "cutoff.k"),
                                                        k = c(NA, 3),
                                                        rowname = c("biggest diff", "top3"),
                                                        stringsAsFactors = FALSE) \%>\%
                                             tibble::column_to_rownames(),
                          nFolds = 3),
                     verbose = TRUE)
}
}
