% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select.R
\name{cvSLFeatureSelector}
\alias{cvSLFeatureSelector}
\title{Short description}
\usage{
cvSLFeatureSelector(
  Y,
  X,
  family = binomial(),
  obsWeights = NULL,
  id = NULL,
  method = "method.NNloglik",
  SL.library = list(c("SL.mean", "screen.corP"), c("SL.mean", "screen.glmnet"),
    c("SL.mean", "screen.randomForest")),
  selector.library = data.frame(selector = "cutoff.biggest.diff", k = NA,
    stringsAsFactors = FALSE),
  nFolds = c(outer = 10, inner = 10),
  trimLogit = 0.001,
  stratifyCV = (family$family == "binomial"),
  shuffle = TRUE,
  validRows = NULL,
  weighted = FALSE,
  verbose = FALSE,
  label = NULL,
  ...
)
}
\arguments{
\item{Y}{Outcome (numeric vector). See \code{\link[SuperLearner]{CV.SuperLearner}}.}

\item{X}{Predictor variable(s) (data.frame or matrix). See
\code{\link[SuperLearner]{CV.SuperLearner}}.}

\item{family}{Error distribution to be used in the model:
\code{\link[stats]{gaussian}} or \code{\link[stats]{binomial}}.
See \code{\link[SuperLearner]{CV.SuperLearner}}.}

\item{obsWeights}{Optional numeric vector of observation weights. See
\code{\link[SuperLearner]{CV.SuperLearner}}.}

\item{id}{Cluster identification variable. See
\code{\link[SuperLearner]{CV.SuperLearner}}.}

\item{method}{A list of method(s) by which \code{\link[SuperLearner]{CV.SuperLearner}} should
estimate coefficients to combine algorithms.}

\item{SL.library}{}

\item{selector.library}{As SL.library, either a vector of length 2 or a list of such vectors. The first element of each vector should be a string naming a selector function (typically from the \code{\link[FSelector]{FSelector}} package, with a prefix of \code{cutoff.}). The second element of the vector should be the required second argument to the named function (usually named \code{k}), if one exists. If there is no second argument, this second element can be set to \code{NULL} or, equivalently, omitted altogether.}

\item{nFolds}{numeric of length 1 or 2. If length(nFolds)==1, the value provided will be used as the number of cross-validation folds for both the outer (\code{\link[SuperLearner]{CV.SuperLearner}}) and inner (SuperLearner) cross-validations. If length(nFolds)==2, the first element or element with name "outer" will be used as the number of folds for the outer (\code{\link[SuperLearner]{CV.SuperLearner}}) cross-validation, and the second element or element with name "inner" will be used as the number of folds for the inner (SuperLearner) cross-validation.}

\item{verbose}{Print diagnostic messages? Defaults to FALSE}

\item{label}{An optional named character vector of length 1. If specified, the value will be added as a column (where the column name is set to \code{names(label)}) in the \code{data.frame} stored in the \code{summary} element of the \code{cvslFull} element of the returned list. One example of when this might be useful is when this function is called from within a cross-validation fold. Then, \code{label} might be set to, for example, \code{c(metafold = fold$v)}.}
}
\value{
A named list containing the results of the \code{\link[SuperLearner]{CV.SuperLearner}}
feature selection. Will contain elements \code{whichVariable} (a \code{data.frame}),
\code{summary} (a \code{data.frame}), and cvslFull (a \code{list} containing one result of class
\code{CV.SuperLearner} for each \code{method} supplied).
}
\description{
Long description
}
\examples{
\dontrun{
# remotes::install_github('osofr/simcausal', build_vignettes = FALSE)
dat <- sim_toy_data(n_obs = 200, rnd_seed = 620)
res <- cvSLFeatureSelector(dat \%>\% pull(Y), dat \%>\% select(-c(ID, Y)), family = binomial(),
                           method = "method.NNloglik",
                           SL.library = setNames(list(c("SL.mean", "screen.randomForest.imp"),
                                                      c("SL.mean", "screen.earth.backwardprune")),
                                                 c("random forest biggest diff mean",
                                                   "splines biggest diff mean")),
                           selector.library = data.frame(selector = c("cutoff.biggest.diff",
                                                                      "cutoff.k"),
                                                         k = c(NA, 2),
                                                         rowname = c("biggest diff", "top2"),
                                                         stringsAsFactors = FALSE) \%>\%
                                              tibble::column_to_rownames(),
                           nFolds = 3,
                           verbose = TRUE)

# based on example in SuperLearner package
dat <- sim_sl_data(n_obs = 100, rnd_seed = 1)
res <- cvSLFeatureSelector(dat \%>\% pull(Y), dat \%>\% select(-c(ID, Y)), family = gaussian(),
                           method = "method.NNLS",
                           SL.library = setNames(list(c("SL.mean", "screen.randomForest.imp"),
                                                      c("SL.mean", "screen.earth.backwardprune")),
                                                 c("random forest biggest diff mean",
                                                   "splines biggest diff mean")),
                           selector.library = data.frame(selector = c("cutoff.biggest.diff",
                                                                     "cutoff.k"),
                                                         k = c(NA, 3),
                                                         rowname = c("biggest diff", "top3"),
                                                         stringsAsFactors = FALSE) \%>\%
                                              tibble::column_to_rownames(),
                           nFolds = 3,
                           verbose = TRUE)
}
}
