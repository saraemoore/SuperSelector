% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualize.R
\name{cvSLVarImpPlot}
\alias{cvSLVarImpPlot}
\title{Short description}
\usage{
cvSLVarImpPlot(
  res,
  featCol = "term",
  valCol = "propFoldSel",
  valLab = "Fraction of CVSL folds in which feature was selected",
  labelVals = TRUE,
  featLabs = NULL,
  panelLabs = NULL,
  varImpTheme = theme_bw() + theme(plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5), legend.position = "none",
    panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank()),
  pointSize = 2,
  strokeSize = 1,
  maxColor = "grey10",
  title = "CV SuperLearner Variable Importance",
  subtitle = NULL,
  panelCol = NULL,
  shapeCol = NULL,
  addSummary = TRUE
)
}
\value{

}
\description{
Long description
}
\examples{
\dontrun{
# based on example in SuperLearner package
set.seed(1)
n_obs <- 100
p_feat <- 20
X <- matrix(rnorm(n_obs*p_feat), nrow = n_obs, ncol = p_feat)
X <- data.frame(X)
Y <- X[, 1] + sqrt(abs(X[, 2] * X[, 3])) + X[, 2] - X[, 3] + rnorm(n_obs)
res <- cvSLFeatureSelector(Y, X, family = gaussian(),
                           method = "method.NNLS",
                           SL.library = setNames(list(c("SL.mean", "screen.randomForest.imp"),
                                                      c("SL.mean", "screen.earth.backwardprune")),
                                                 c("random forest biggest diff mean",
                                                   "splines biggest diff mean")),
                           selector.library = data.frame(selector = c("cutoff.biggest.diff",
                                                                     "cutoff.k"),
                                                         k = c(NA, 3),
                                                         rowname = c("biggest diff", "top3"),
                                                         stringsAsFactors = FALSE) \%>\%
                                              tibble::column_to_rownames(),
                           nFolds = 5,
                           verbose = TRUE)
res_sum <- summarizeScreen(res$summary, groupCols = c("method", "screener"), collapseCols = "screener")
cvSLVarImpPlot(res_sum)
}
}
